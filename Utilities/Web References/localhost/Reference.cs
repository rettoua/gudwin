//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Utilities.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GUDWIN GisServerServiceSoap", Namespace="http://localhost:19236/WebServer/Service1.asmx/")]
    public partial class GUDWINGisServerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConnectToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientPingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlarmTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestedAlarmTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateObjectsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAlarmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllObjInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicenseTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLicenseTimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GUDWINGisServerService() {
            this.Url = global::Utilities.Properties.Settings.Default.Utilities_localhost_GUDWIN_x0020_GisServerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConnectToServerCompletedEventHandler ConnectToServerCompleted;
        
        /// <remarks/>
        public event ClientPingCompletedEventHandler ClientPingCompleted;
        
        /// <remarks/>
        public event DisconnectCompletedEventHandler DisconnectCompleted;
        
        /// <remarks/>
        public event GetAlarmTableCompletedEventHandler GetAlarmTableCompleted;
        
        /// <remarks/>
        public event GetRequestedAlarmTableCompletedEventHandler GetRequestedAlarmTableCompleted;
        
        /// <remarks/>
        public event GetAllObjectsCompletedEventHandler GetAllObjectsCompleted;
        
        /// <remarks/>
        public event UpdateObjectsInfoCompletedEventHandler UpdateObjectsInfoCompleted;
        
        /// <remarks/>
        public event UpdateAlarmsCompletedEventHandler UpdateAlarmsCompleted;
        
        /// <remarks/>
        public event GetRouteCompletedEventHandler GetRouteCompleted;
        
        /// <remarks/>
        public event GetObjInfoCompletedEventHandler GetObjInfoCompleted;
        
        /// <remarks/>
        public event GetAllObjInfoCompletedEventHandler GetAllObjInfoCompleted;
        
        /// <remarks/>
        public event GetObjParamsCompletedEventHandler GetObjParamsCompleted;
        
        /// <remarks/>
        public event GetReportCompletedEventHandler GetReportCompleted;
        
        /// <remarks/>
        public event GetLicenseTimeCompletedEventHandler GetLicenseTimeCompleted;
        
        /// <remarks/>
        public event SetLicenseTimeCompletedEventHandler SetLicenseTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/ConnectToServer", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConnectToServer(string login, string pass, string tz) {
            object[] results = this.Invoke("ConnectToServer", new object[] {
                        login,
                        pass,
                        tz});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectToServerAsync(string login, string pass, string tz) {
            this.ConnectToServerAsync(login, pass, tz, null);
        }
        
        /// <remarks/>
        public void ConnectToServerAsync(string login, string pass, string tz, object userState) {
            if ((this.ConnectToServerOperationCompleted == null)) {
                this.ConnectToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectToServerOperationCompleted);
            }
            this.InvokeAsync("ConnectToServer", new object[] {
                        login,
                        pass,
                        tz}, this.ConnectToServerOperationCompleted, userState);
        }
        
        private void OnConnectToServerOperationCompleted(object arg) {
            if ((this.ConnectToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectToServerCompleted(this, new ConnectToServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/ClientPing", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ClientPing(string a) {
            object[] results = this.Invoke("ClientPing", new object[] {
                        a});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ClientPingAsync(string a) {
            this.ClientPingAsync(a, null);
        }
        
        /// <remarks/>
        public void ClientPingAsync(string a, object userState) {
            if ((this.ClientPingOperationCompleted == null)) {
                this.ClientPingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientPingOperationCompleted);
            }
            this.InvokeAsync("ClientPing", new object[] {
                        a}, this.ClientPingOperationCompleted, userState);
        }
        
        private void OnClientPingOperationCompleted(object arg) {
            if ((this.ClientPingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientPingCompleted(this, new ClientPingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/Disconnect", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Disconnect(string a) {
            object[] results = this.Invoke("Disconnect", new object[] {
                        a});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DisconnectAsync(string a) {
            this.DisconnectAsync(a, null);
        }
        
        /// <remarks/>
        public void DisconnectAsync(string a, object userState) {
            if ((this.DisconnectOperationCompleted == null)) {
                this.DisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisconnectOperationCompleted);
            }
            this.InvokeAsync("Disconnect", new object[] {
                        a}, this.DisconnectOperationCompleted, userState);
        }
        
        private void OnDisconnectOperationCompleted(object arg) {
            if ((this.DisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisconnectCompleted(this, new DisconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetAlarmTable", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAlarmTable(string a) {
            object[] results = this.Invoke("GetAlarmTable", new object[] {
                        a});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlarmTableAsync(string a) {
            this.GetAlarmTableAsync(a, null);
        }
        
        /// <remarks/>
        public void GetAlarmTableAsync(string a, object userState) {
            if ((this.GetAlarmTableOperationCompleted == null)) {
                this.GetAlarmTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlarmTableOperationCompleted);
            }
            this.InvokeAsync("GetAlarmTable", new object[] {
                        a}, this.GetAlarmTableOperationCompleted, userState);
        }
        
        private void OnGetAlarmTableOperationCompleted(object arg) {
            if ((this.GetAlarmTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlarmTableCompleted(this, new GetAlarmTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetRequestedAlarmTable", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRequestedAlarmTable(string from_date, string to_date) {
            object[] results = this.Invoke("GetRequestedAlarmTable", new object[] {
                        from_date,
                        to_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestedAlarmTableAsync(string from_date, string to_date) {
            this.GetRequestedAlarmTableAsync(from_date, to_date, null);
        }
        
        /// <remarks/>
        public void GetRequestedAlarmTableAsync(string from_date, string to_date, object userState) {
            if ((this.GetRequestedAlarmTableOperationCompleted == null)) {
                this.GetRequestedAlarmTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestedAlarmTableOperationCompleted);
            }
            this.InvokeAsync("GetRequestedAlarmTable", new object[] {
                        from_date,
                        to_date}, this.GetRequestedAlarmTableOperationCompleted, userState);
        }
        
        private void OnGetRequestedAlarmTableOperationCompleted(object arg) {
            if ((this.GetRequestedAlarmTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestedAlarmTableCompleted(this, new GetRequestedAlarmTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetAllObjects", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAllObjects(string a) {
            object[] results = this.Invoke("GetAllObjects", new object[] {
                        a});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllObjectsAsync(string a) {
            this.GetAllObjectsAsync(a, null);
        }
        
        /// <remarks/>
        public void GetAllObjectsAsync(string a, object userState) {
            if ((this.GetAllObjectsOperationCompleted == null)) {
                this.GetAllObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllObjectsOperationCompleted);
            }
            this.InvokeAsync("GetAllObjects", new object[] {
                        a}, this.GetAllObjectsOperationCompleted, userState);
        }
        
        private void OnGetAllObjectsOperationCompleted(object arg) {
            if ((this.GetAllObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllObjectsCompleted(this, new GetAllObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/UpdateObjectsInfo", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateObjectsInfo(string a) {
            object[] results = this.Invoke("UpdateObjectsInfo", new object[] {
                        a});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateObjectsInfoAsync(string a) {
            this.UpdateObjectsInfoAsync(a, null);
        }
        
        /// <remarks/>
        public void UpdateObjectsInfoAsync(string a, object userState) {
            if ((this.UpdateObjectsInfoOperationCompleted == null)) {
                this.UpdateObjectsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateObjectsInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateObjectsInfo", new object[] {
                        a}, this.UpdateObjectsInfoOperationCompleted, userState);
        }
        
        private void OnUpdateObjectsInfoOperationCompleted(object arg) {
            if ((this.UpdateObjectsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateObjectsInfoCompleted(this, new UpdateObjectsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/UpdateAlarms", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateAlarms(string a) {
            object[] results = this.Invoke("UpdateAlarms", new object[] {
                        a});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAlarmsAsync(string a) {
            this.UpdateAlarmsAsync(a, null);
        }
        
        /// <remarks/>
        public void UpdateAlarmsAsync(string a, object userState) {
            if ((this.UpdateAlarmsOperationCompleted == null)) {
                this.UpdateAlarmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAlarmsOperationCompleted);
            }
            this.InvokeAsync("UpdateAlarms", new object[] {
                        a}, this.UpdateAlarmsOperationCompleted, userState);
        }
        
        private void OnUpdateAlarmsOperationCompleted(object arg) {
            if ((this.UpdateAlarmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAlarmsCompleted(this, new UpdateAlarmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetRoute", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRoute(string id, string sensor_id, string from_date, string to_date) {
            object[] results = this.Invoke("GetRoute", new object[] {
                        id,
                        sensor_id,
                        from_date,
                        to_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRouteAsync(string id, string sensor_id, string from_date, string to_date) {
            this.GetRouteAsync(id, sensor_id, from_date, to_date, null);
        }
        
        /// <remarks/>
        public void GetRouteAsync(string id, string sensor_id, string from_date, string to_date, object userState) {
            if ((this.GetRouteOperationCompleted == null)) {
                this.GetRouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRouteOperationCompleted);
            }
            this.InvokeAsync("GetRoute", new object[] {
                        id,
                        sensor_id,
                        from_date,
                        to_date}, this.GetRouteOperationCompleted, userState);
        }
        
        private void OnGetRouteOperationCompleted(object arg) {
            if ((this.GetRouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRouteCompleted(this, new GetRouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetObjInfo", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetObjInfo(string id) {
            object[] results = this.Invoke("GetObjInfo", new object[] {
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjInfoAsync(string id) {
            this.GetObjInfoAsync(id, null);
        }
        
        /// <remarks/>
        public void GetObjInfoAsync(string id, object userState) {
            if ((this.GetObjInfoOperationCompleted == null)) {
                this.GetObjInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjInfoOperationCompleted);
            }
            this.InvokeAsync("GetObjInfo", new object[] {
                        id}, this.GetObjInfoOperationCompleted, userState);
        }
        
        private void OnGetObjInfoOperationCompleted(object arg) {
            if ((this.GetObjInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjInfoCompleted(this, new GetObjInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetAllObjInfo", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAllObjInfo(string id) {
            object[] results = this.Invoke("GetAllObjInfo", new object[] {
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllObjInfoAsync(string id) {
            this.GetAllObjInfoAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAllObjInfoAsync(string id, object userState) {
            if ((this.GetAllObjInfoOperationCompleted == null)) {
                this.GetAllObjInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllObjInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllObjInfo", new object[] {
                        id}, this.GetAllObjInfoOperationCompleted, userState);
        }
        
        private void OnGetAllObjInfoOperationCompleted(object arg) {
            if ((this.GetAllObjInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllObjInfoCompleted(this, new GetAllObjInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetObjParams", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetObjParams(string id) {
            object[] results = this.Invoke("GetObjParams", new object[] {
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjParamsAsync(string id) {
            this.GetObjParamsAsync(id, null);
        }
        
        /// <remarks/>
        public void GetObjParamsAsync(string id, object userState) {
            if ((this.GetObjParamsOperationCompleted == null)) {
                this.GetObjParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjParamsOperationCompleted);
            }
            this.InvokeAsync("GetObjParams", new object[] {
                        id}, this.GetObjParamsOperationCompleted, userState);
        }
        
        private void OnGetObjParamsOperationCompleted(object arg) {
            if ((this.GetObjParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjParamsCompleted(this, new GetObjParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetReport", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetReport(string id, string report_type, string from_date, string to_date) {
            object[] results = this.Invoke("GetReport", new object[] {
                        id,
                        report_type,
                        from_date,
                        to_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportAsync(string id, string report_type, string from_date, string to_date) {
            this.GetReportAsync(id, report_type, from_date, to_date, null);
        }
        
        /// <remarks/>
        public void GetReportAsync(string id, string report_type, string from_date, string to_date, object userState) {
            if ((this.GetReportOperationCompleted == null)) {
                this.GetReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportOperationCompleted);
            }
            this.InvokeAsync("GetReport", new object[] {
                        id,
                        report_type,
                        from_date,
                        to_date}, this.GetReportOperationCompleted, userState);
        }
        
        private void OnGetReportOperationCompleted(object arg) {
            if ((this.GetReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportCompleted(this, new GetReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/GetLicenseTime", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLicenseTime() {
            object[] results = this.Invoke("GetLicenseTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseTimeAsync() {
            this.GetLicenseTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetLicenseTimeAsync(object userState) {
            if ((this.GetLicenseTimeOperationCompleted == null)) {
                this.GetLicenseTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseTimeOperationCompleted);
            }
            this.InvokeAsync("GetLicenseTime", new object[0], this.GetLicenseTimeOperationCompleted, userState);
        }
        
        private void OnGetLicenseTimeOperationCompleted(object arg) {
            if ((this.GetLicenseTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseTimeCompleted(this, new GetLicenseTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:19236/WebServer/Service1.asmx/SetLicenseTime", RequestNamespace="http://localhost:19236/WebServer/Service1.asmx/", ResponseNamespace="http://localhost:19236/WebServer/Service1.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetLicenseTime(string hexCode) {
            object[] results = this.Invoke("SetLicenseTime", new object[] {
                        hexCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetLicenseTimeAsync(string hexCode) {
            this.SetLicenseTimeAsync(hexCode, null);
        }
        
        /// <remarks/>
        public void SetLicenseTimeAsync(string hexCode, object userState) {
            if ((this.SetLicenseTimeOperationCompleted == null)) {
                this.SetLicenseTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLicenseTimeOperationCompleted);
            }
            this.InvokeAsync("SetLicenseTime", new object[] {
                        hexCode}, this.SetLicenseTimeOperationCompleted, userState);
        }
        
        private void OnSetLicenseTimeOperationCompleted(object arg) {
            if ((this.SetLicenseTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLicenseTimeCompleted(this, new SetLicenseTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConnectToServerCompletedEventHandler(object sender, ConnectToServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectToServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectToServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ClientPingCompletedEventHandler(object sender, ClientPingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientPingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientPingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisconnectCompletedEventHandler(object sender, DisconnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisconnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisconnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAlarmTableCompletedEventHandler(object sender, GetAlarmTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlarmTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlarmTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRequestedAlarmTableCompletedEventHandler(object sender, GetRequestedAlarmTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestedAlarmTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestedAlarmTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllObjectsCompletedEventHandler(object sender, GetAllObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateObjectsInfoCompletedEventHandler(object sender, UpdateObjectsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateObjectsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateObjectsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAlarmsCompletedEventHandler(object sender, UpdateAlarmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAlarmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAlarmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRouteCompletedEventHandler(object sender, GetRouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetObjInfoCompletedEventHandler(object sender, GetObjInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllObjInfoCompletedEventHandler(object sender, GetAllObjInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllObjInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllObjInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetObjParamsCompletedEventHandler(object sender, GetObjParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReportCompletedEventHandler(object sender, GetReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLicenseTimeCompletedEventHandler(object sender, GetLicenseTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetLicenseTimeCompletedEventHandler(object sender, SetLicenseTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLicenseTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLicenseTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591